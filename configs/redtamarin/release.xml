<?xml version="1.0" encoding="UTF-8"?>

<project name="redtamarin" default="main" basedir=".">

    <target name="flag">
    <echo>                                                           
                              ```````                                                               
                      ``..--:://++++/::-..`                                                         
                  `.::/+ossyyyyyyyyyyyyyso+:-                                                       
                `-+oyyyyyyysoo///::////+osyss/-                                                     
               :+syyyss+/--.````./+ooo/:`.-oyso:`                                                   
             -:yyyoo-.``      `-ssysso-` `.oyys+.                                                   
            `+sys+-`          .:yyy+/.``.:+syyo-`                                                   
           ./syo/`            `-syyso+++ssyss+:                                                     
           -syy/:              `-//++++++//:-``                                                     
           -yyy:-                `````````    ``....``                                              
          .:yyy/-                       ``.:/oossssss+/:::/+:-.``                                   
          `:yyyo/`                    ../+sssyyyyyyyyyysssyysss+/..                                 
           -syyys+-`               `.:osyyyyyyyyyyyyyyyyyyyyyyyyys+-`                               
           `-+syyyo+-.`          `.+oyyyyyyyyyyyyyyyyyyyyyyyyyyyyys/.                               
             .-ooyyyso+/:``    `-+oyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyo:`                               
               `.:osyyyyso+:--++syyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyss-                               
                 `..oosyyyysssyyyyyyyyyyyyyysooooossyyyyyyyyyyyyyyys-                               
                    `.:++ssyyyyyyyyyyyyyyyy+:`` ``-:/osyyyyyyyyyyyo/.                               
                        `:/+syyyyyyyyyyyyyy:.        :/yyyyyyyyyy+:`                                
                           `:/yyyyyyyyyyyyyso:-`     -/yyyyyyyyyy:.                                 
                            ``ooyyyyyyyyyyyyysso:-   /oyyyyssyyyyo/``                               
                              /+yyyyyyss++osyyyyo+ `:oyyso/::/ssyyso:-                              
                            ``+oyyyyso:-``.oyyyy/-.:syys+.`  `.+syyyyy:-                            
                           `/+yyyyyo/.../+osyyo/. /oyyy+:      -/yyyyys+.`                          
                         `-+syyys+/.../oyyyss:-`  :+yyys+:.`   ``:::/+sso:-                         
                       ``+oyss+/-.` ./syyyy+/..````-+osyssoo:-.``   ``-/yss//-.``````               
                    `.:ossso:-``    ./osyyyssssso+/:-../+ssssssoo/:-.``./oyysssso++++:-`            
                ``-:osyyy+:`          .-++ooossoooo+/.    `./+yyyyyyss/:`/oyyyyyooossso/.`          
               .:ossyyyyy+/:::..           ``..```           -syyyyyyyyo/.`++o++ `..--..`           
               -/s+/:/osyyyyyyo/``   .___ __                  `-+ooooooo+:._``...                    
                `-_______--:____`  __|  //  |______    _____ __`__._____`_|__| ____                   
                  \_  __ \_/ __ \ / __ |\   __\__  \  /     \\__  \\_  __ \  |/    \ 
                   |  | \/\  ___// /_/ | |  |  / __ \|  Y Y  \/ __ \|  | \/  |   |  \
                   |__|    \___  >____ | |__| (____  /__|_|  (____  /__|  |__|___|  /
                               \/     \/           \/      \/     \/              \/           
    </echo>
    </target>

    <target name="clean">
        <delete dir="bin-release"/>
    </target>

    <target name="before" depends="define-tasks,define-constants">
        <mkdir dir="bin-release"/>
    </target>

    <target name="define-constants">
        <property file="build/build.properties"/>

        <condition property="TARGET" value="${TARGET_MAC}">
            <os family="mac"/>
        </condition>

        <condition property="TARGET" value="${TARGET_UNIX}">
            <os family="unix"/>
        </condition>
        
        <condition property="TARGET" value="${TARGET_WIN}">
            <os family="windows" />
        </condition>


        <condition property="TARGET_D" value="${TARGET_D_MAC}">
            <os family="mac"/>
        </condition>

        <condition property="TARGET_D" value="${TARGET_D_UNIX}">
            <os family="unix"/>
        </condition>
        
        <condition property="TARGET_D" value="${TARGET_D_WIN}">
            <os family="windows" />
        </condition>


        <condition property="OS" value="OSX">
            <os family="mac"/>
        </condition>

        <condition property="OS" value="NIX">
            <os family="unix"/>
        </condition>
        
        <condition property="OS" value="WIN">
            <os family="windows" />
        </condition>
        

        <property file="build/version.properties" prefix="projects.redtamarin." />

        <exec executable="svnversion" outputproperty="subversion_revision"> 
            <arg line="-n ${basedir}"/> 
        </exec> 
        <script language="javascript"> 
        var revision  = String( project.getProperty("subversion_revision") );
        if( revision.charAt(revision.length-1) == "M" )
        {
            revision = revision.substr(0, revision.length-1)
        }
        if( revision.indexOf(":") > -1 )
        {
            revision = revision.split(":")[0];
        }
        project.setNewProperty("svn.info.rev", revision);
        </script>
        <property name="projects.redtamarin.version.revision" value="${svn.info.rev}"/>
        <property name="projects.redtamarin.version" value="${projects.redtamarin.version.major}.${projects.redtamarin.version.minor}.${projects.redtamarin.version.build}.${projects.redtamarin.version.revision}" />
        <echo message="Building redtamarin v${projects.redtamarin.version}"/>
    </target>

    <target name="define-tasks">
        
        <!-- Define additional ant tasks -->
        <taskdef resource="net/sf/antcontrib/antlib.xml">
            <classpath >
                <fileset dir="build/ant/" includes="ant-contrib-1.0b3.jar"/>
            </classpath>
        </taskdef>
        <echo message="ant-contrib tasks defined" />
        
    </target>
    
    <target name="main" depends="clean,before,build,after">
    </target>

    <target name="after">
        <copy file="src/tamarin/core/builtin.abc" todir="bin-release"/>
        <copy file="src/tamarin/shell/shell_toplevel.abc" tofile="bin-release/toplevel.abc"/>

        <property name="RELEASE_ZIP" value="${RELEASE_NAME}_${projects.redtamarin.version}_${OS}.zip"/>

        <zip basedir="bin-release" destfile="bin-release/${RELEASE_ZIP}" />
        
    </target>

    <target name="build" depends="build-asc,build-shell_toplevel,build-tamarin,build-tamarin-debugger">
    </target>

    <target name="build-asc">

        <!-- Patch api versioning first -->
        <copy file="src/tamarin/core/api-versions.java" tofile="src/asc/src/java/macromedia/asc/util/APIVersions.java"/>
        
        <ant antfile="src/asc/build/java/build.xml" target="main" inheritAll="false" />
        <copy file="src/asc/lib/asc.jar" todir="src/tamarin/utils"/>
        <copy file="src/asc/lib/asc.jar" todir="bin-release"/>
    
    </target>

    <target name="build-shell_toplevel">

        <exec executable="python" dir="src/tamarin/shell" failonerror="true">
            <arg value="shell_toplevel.py"/>
            <arg value="shell_toplevel.as"/>
        </exec>
    
    </target>

    <target name="build-tamarin">

        <delete dir="${RELEASE_DIR}"/>
        <mkdir dir="${RELEASE_DIR}"/>

        <exec executable="python" dir="${RELEASE_DIR}" failonerror="true">
            <arg value="../configure.py"/>
            <arg value="--enable-shell"/>
        </exec>
        
        <exec executable="make" dir="${RELEASE_DIR}" failonerror="true" />
        <copy file="${RELEASE_DIR}/shell/${TARGET}" todir="bin-release"/>
        <chmod file="bin-release/${TARGET}" perm="+x"/>
    
    </target>

    <target name="build-tamarin-debugger">

        <delete dir="${RELEASE_DIR}"/>
        <mkdir dir="${RELEASE_DIR}"/>

        <exec executable="python" dir="${RELEASE_DIR}" failonerror="true">
            <arg value="../configure.py"/>
            <arg value="--enable-shell"/>
            <arg value="--enable-debugger"/>
        </exec>
        
        <exec executable="make" dir="${RELEASE_DIR}" failonerror="true" />
        <copy file="${RELEASE_DIR}/shell/${TARGET}" tofile="bin-release/${TARGET_D}"/>
        <chmod file="bin-release/${TARGET_D}" perm="+x"/>
    
    </target>


</project>

